一元前置* 表示....的内容
一元后置& 表示....的地址
一元后置& 表示....的引用 引用与指针的唯一区别是我们无须使用前置运算符*访问所引用的值

int v[] = {1, 2, 3, 4, 5};
for(auto x : v){   // 对于v的每个元素，将其从头到尾依次放入x并打印
    cout << x << "\n";
}
如果不希望把v的值拷贝到变量x中，只想令x指向一个元素：
void test01()
{
    int v[] = {1, 2, 3, 4, 5};

    for(auto &x : v){
        ++x;   // 对于v的每个元素，将其从头到尾依次放入x并打印
        cout << x << "\n";
    }
}
T* p //T*指向T的指针    
T& r //T&指向T的引用 